# -*- coding: utf-8 -*-
"""Kode UAS Mesin Python -  6161901025_Claresta_6161901028_Christian_6161901051_Fransiska_6161901116_Tiara.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S-LhFGggt4QoIe05276wKwPmo1ZVIO0h

# UAS Pembelajaran Mesin dengan Python

Kelompok :

1. Claresta Tirta S. G (6161901025)
2. Christian Jauhari (6161901028)
3. Fransiska Nadya C. P (6161901051)
4. Tiara Alamanda (6161901116)

# Preprocessing Data

**Load Data**
"""

import pandas as pd
url = 'https://raw.githubusercontent.com/blackhespy/heart-disease-data/main/Heart%20Disease.csv'
df = pd.read_csv(url)
df

"""Sebelumnya sudah di load data csv mengenai sejumlah data terkait penyebab penyakit jantung dan sudah dimasukkan ke dalam variable df. Data ini berjumlah 4240 baris dan 16 kolom.

**Langkah-langkah Persiapan Data**
"""

df.info()

"""Lalu dengan menggunakan df.info(), dapat dilihat untuk kolom seperti Education, cigsPerDay, BPMeds, totChol, BMI, heartRate, dan glucose terdapat data yang bernilai Null (data kosong) karena jumlah baris yang ditunjukkan tidak sama dengan jumlah baris pada data awal, yaitu 4240 baris. Dapat diperhatikan pula tipe data dari masing-masing kolom."""

df.describe()

df = df.drop(columns=['education', 'cigsPerDay','BPMeds','diabetes','sysBP','diaBP','heartRate'])
df

"""Kelompok kami memutuskan untuk menghapus kolom education, cigsPerDay,  BPMeds, diabetes, sysBP, diaBP, dan heartRate. Kolom education dihapus karena menurut kami, pendidikan tidak ada hubungannya dengan penyakit jantung. Lalu, kami menghapus kolom cigsPerDay, BPMeds, dan diabetes karena bisa diketahui dari kolom yang lain. Kemudian kolom sysBP, diaBP, dan heartRate dapat dijelaskan oleh kolom prevalentHyp.

**Cek Nilai NA pada tiap baris**
"""

persentase_data_kosong= df.isna().sum()*100/len(df)
nilaikosong_df= pd.DataFrame({'Persentase Data Kosong': persentase_data_kosong})
nilaikosong_df

df=df.dropna()
df

"""Pada bagian ini, kami memutuskan untuk menghapus baris yang terdapat nilai Null. Sehingga diperoleh data yang baru dengan jumlah baris adalah 3828 dan jumlah kolom adalah 9.

# Logistic Regression

Menentukan data X (response) dan y (class)
"""

x = df.drop(columns='TenYearCHD')
y = df[['TenYearCHD']]

#dfy = np.ravel(dfy)

"""Splitting Data"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

"""Logistic Regression"""

from sklearn.linear_model import LogisticRegression
logisticRegr = LogisticRegression()
logreg = logisticRegr.fit(x_train, y_train)
logreg

print(logreg.coef_, logreg.intercept_)

Y_predic = logisticRegr.predict(x_test)
Y_predic

"""Confusion Matrix"""

from sklearn.metrics import classification_report, confusion_matrix, plot_confusion_matrix
print(confusion_matrix(y_test, Y_predic))
plot_confusion_matrix(logisticRegr, x_test,y_test)

print(classification_report(y_test,Y_predic))

"""Tingkat akurasi dari simulasi penerapan logistic regression di atas adalah 85%."""